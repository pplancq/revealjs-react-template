name: Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  HUSKY: 0

jobs:
  install:
    name: Install package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: pplancq/actions/setup-node@main

      - name: Check package-lock.json
        run: npm run package:check

      - name: Install package
        run: npm ci

  commitlint:
    if: github.event_name == 'pull_request'
    name: CommitLint
    needs:
      - install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: pplancq/actions/setup-node@main

      # https://commitlint.js.org/guides/ci-setup.html#github-actions
      - name: Validate PR commits with commitlint
        run: npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose --color

  lint:
    name: Lint code
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: pplancq/actions/setup-node@main

      - name: Run lint
        run: npm run lint

  #  sonarcloud:
  #    name: SonarCloud Scan
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Checkout repository
  #        uses: actions/checkout@v4
  #        with:
  #          fetch-depth: 0
  #
  #      - name: Download test reports
  #        uses: actions/download-artifact@v4
  #        with:
  #          name: sonar-reports
  #
  #      - name: SonarCloud Scan
  #        uses: sonarsource/sonarcloud-github-action@v3
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: pplancq/actions/setup-node@main

      - name: Run build
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build/

  deploy:
    if: github.event_name == 'push' && github.actor == 'pplancq'
    needs:
      - build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    concurrency:
      group: 'pages'
      cancel-in-progress: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: ./build
          github_token: ${{ secrets.GITHUB_TOKEN }}
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
